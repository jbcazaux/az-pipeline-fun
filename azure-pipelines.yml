trigger:
  - master

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: 'd1763980-54b6-42ff-9197-65689110f2c5'
  imageRepository: 'helloapp'
  containerRegistry: 'codoxacr.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Install & Test
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Nodejs'
          - script: |
              npm ci
              npm run build
            displayName: 'npm install & build'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'test-report.xml'
              failTaskOnFailedTests: true
              testRunTitle: 'Publish test results'
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: 'coverage/cobertura-coverage.xml'
              pathToSources: 'src'
              reportDirectory: 'coverage'
              failIfCoverageEmpty: true
      - job: Build
        displayName: Build & Push Docker Image
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
